<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nov.jhpoi.sql.mapper.ShopMapper">
  <resultMap id="BaseResultMap" type="com.nov.jhpoi.sql.model.Shop">
    <id column="shopId" jdbcType="VARCHAR" property="shopid" />
    <result column="shopNameId" jdbcType="VARCHAR" property="shopnameid" />
    <result column="shopMoney" jdbcType="VARCHAR" property="shopmoney" />
    <result column="shopTime" jdbcType="TIMESTAMP" property="shoptime" />
    <result column="id" jdbcType="VARCHAR" property="id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shopId, shopNameId, shopMoney, shopTime, id
  </sql>
  <select id="selectByExample" parameterType="com.nov.jhpoi.sql.model.ShopExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `shop`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.nov.jhpoi.sql.model.ShopKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `shop`
    where shopId = #{shopid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.nov.jhpoi.sql.model.ShopKey">
    delete from `shop`
    where shopId = #{shopid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nov.jhpoi.sql.model.ShopExample">
    delete from `shop`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nov.jhpoi.sql.model.Shop">
    insert into `shop` (shopId, shopNameId, shopMoney, 
      shopTime, id)
    values (#{shopid,jdbcType=VARCHAR}, #{shopnameid,jdbcType=VARCHAR}, #{shopmoney,jdbcType=VARCHAR}, 
      #{shoptime,jdbcType=TIMESTAMP}, #{id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nov.jhpoi.sql.model.Shop">
    insert into `shop`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopid != null">
        shopId,
      </if>
      <if test="shopnameid != null">
        shopNameId,
      </if>
      <if test="shopmoney != null">
        shopMoney,
      </if>
      <if test="shoptime != null">
        shopTime,
      </if>
      <if test="id != null">
        id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopid != null">
        #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="shopnameid != null">
        #{shopnameid,jdbcType=VARCHAR},
      </if>
      <if test="shopmoney != null">
        #{shopmoney,jdbcType=VARCHAR},
      </if>
      <if test="shoptime != null">
        #{shoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nov.jhpoi.sql.model.ShopExample" resultType="java.lang.Long">
    select count(*) from `shop`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `shop`
    <set>
      <if test="record.shopid != null">
        shopId = #{record.shopid,jdbcType=VARCHAR},
      </if>
      <if test="record.shopnameid != null">
        shopNameId = #{record.shopnameid,jdbcType=VARCHAR},
      </if>
      <if test="record.shopmoney != null">
        shopMoney = #{record.shopmoney,jdbcType=VARCHAR},
      </if>
      <if test="record.shoptime != null">
        shopTime = #{record.shoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `shop`
    set shopId = #{record.shopid,jdbcType=VARCHAR},
      shopNameId = #{record.shopnameid,jdbcType=VARCHAR},
      shopMoney = #{record.shopmoney,jdbcType=VARCHAR},
      shopTime = #{record.shoptime,jdbcType=TIMESTAMP},
      id = #{record.id,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nov.jhpoi.sql.model.Shop">
    update `shop`
    <set>
      <if test="shopnameid != null">
        shopNameId = #{shopnameid,jdbcType=VARCHAR},
      </if>
      <if test="shopmoney != null">
        shopMoney = #{shopmoney,jdbcType=VARCHAR},
      </if>
      <if test="shoptime != null">
        shopTime = #{shoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="id != null">
        id = #{id,jdbcType=VARCHAR},
      </if>
    </set>
    where shopId = #{shopid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nov.jhpoi.sql.model.Shop">
    update `shop`
    set shopNameId = #{shopnameid,jdbcType=VARCHAR},
      shopMoney = #{shopmoney,jdbcType=VARCHAR},
      shopTime = #{shoptime,jdbcType=TIMESTAMP},
      id = #{id,jdbcType=VARCHAR}
    where shopId = #{shopid,jdbcType=VARCHAR}
  </update>
</mapper>